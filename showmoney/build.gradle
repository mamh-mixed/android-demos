apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.cardinfolink.yunshouyin"
        minSdkVersion 8
        targetSdkVersion 23
        versionCode 57
        versionName "3.0.12"
        // 3 options: pro, test, dev
        buildConfigField 'String', 'ENVIRONMENT', '"pro"'
    }

    productFlavors {
        //this is 生产环境
        cardinfolink {
            manifestPlaceholders = [UMENG_APPKEY_VALUE  : "55ebd98367e58e0f13002f2a",
                                    UMENG_MESSAGE_SECRET: "2ca19c22883bbdd491ea3569299fee9c",
                                    UMENG_CHANNEL_VALUE : "yunshouyin",
                                    PACKAGE             : "com.cardinfolink.yunshouyin"]
            applicationId "com.cardinfolink.yunshouyin"
            buildConfigField 'String', 'ENVIRONMENT', '"pro"'
            buildConfigField 'String', 'GIT', getGit()
        }
        //this is 测试环境
        _test {
            manifestPlaceholders = [UMENG_APPKEY_VALUE  : "55ebd98367e58e0f13002f2a",
                                    UMENG_MESSAGE_SECRET: "2ca19c22883bbdd491ea3569299fee9c",
                                    UMENG_CHANNEL_VALUE : "yunshouyin",
                                    PACKAGE             : "com.cardinfolink.yunshouyin.test"]
            applicationId "com.cardinfolink.yunshouyin.test"
            buildConfigField 'String', 'ENVIRONMENT', '"test"'
            buildConfigField 'String', 'GIT', getGit()
        }
        //this is 开发环境
        dev {
            manifestPlaceholders = [UMENG_APPKEY_VALUE  : "55ebd98367e58e0f13002f2a",
                                    UMENG_MESSAGE_SECRET: "2ca19c22883bbdd491ea3569299fee9c",
                                    UMENG_CHANNEL_VALUE : "yunshouyin",
                                    PACKAGE             : "com.cardinfolink.yunshouyin.test"]
            applicationId "com.cardinfolink.yunshouyin.test"
            buildConfigField 'String', 'ENVIRONMENT', '"dev"'
            buildConfigField 'String', 'GIT', getGit()
        }
    }

    signingConfigs {
        debug {
        }

        release {
            storeFile file("../key.keystore")
            storePassword "cil1009"
            keyAlias "cardinfolink"
            keyPassword "cil1009"
        }
    }

    buildTypes {
        release {
            //TODO: 混淆代码
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            shrinkResources false
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "${releaseTime()}_showmoney_v${variant.versionName}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
    sourceSets.main {
        jniLibs.srcDir 'libs'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    //compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    compile project(':cashierSdk')
    compile project(':pulltorefreshlibrary')
    compile project(':menulibrary')
    compile project(':wheellibrary')

    compile files('libs/commons-codec-1.3.jar')
    compile files('libs/core.jar')
    compile files('libs/umeng-analytics-v5.5.3.jar')
    compile files('libs/umeng-update-v2.6.0.1.jar')
    compile files('libs/com.umeng.message.lib_v2.5.0.jar')
    compile 'commons-io:commons-io:2.4'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.qiniu:qiniu-android-sdk:7.0.+'

}

def releaseTime() {
    return new Date().format("yyyy-MM-dd")
}

//用这个方法来 获取 git 最后一个commit id，并且前面加上一个具体的编译的时间
//这个方便来定位安装的是哪个版本的apk。
def getGit() {
    def time = new Date().format("yyyy-MM-dd HH:mm:ss")
    Process p = "git rev-parse HEAD".execute()
    return "\"[" + time + "] " + p.text.trim() + "\""
}
